syntax = "proto3";

package jellyfish;

// Defines any type of message sent between JF and a peer
message PeerMessage {
  // Response sent by JF, confirming successfull authentication
  message Authenticated {}

  // Request sent by peer, to authenticate to JF server
  message AuthRequest { string token = 1; }

  // Any type of WebRTC messages passed betweend JF and peer
  message MediaEvent { string data = 1; }

  message Uploaded {
    int32 upload_id = 1;
    string url = 2;
  }

  message Action {
    string action = 1;
    string data = 2;
  }

  message LocatorRequest {
    optional string previous_ip = 1;
  }

  message Located {
    optional string ip = 1;
    optional float lat = 2;
    optional float lon = 3;
    optional bytes taxon_probabilities = 4;
  }

  oneof content {
    Authenticated authenticated = 1;
    AuthRequest auth_request = 2;
    MediaEvent media_event = 3;
    Uploaded uploaded = 4;
    Action action = 5;
    LocatorRequest locator_request = 6;
    Located located = 7;
  }
}
